<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://bitworking.org/news/feed/index.atom" rel="self" type="application/atom+xml" /><link href="https://bitworking.org/" rel="alternate" type="text/html" /><updated>2018-11-29T12:53:37-05:00</updated><id>https://bitworking.org/</id><title type="html">BitWorking</title><subtitle>Joe Gregorio - REST, Web, Python, Go, APIs, Dad, Husband, Maker, or any linear combination of such. Googler.
</subtitle><entry><title type="html">Oligarchy collusion</title><link href="https://bitworking.org/news/2018/11/oligarchy-collusion" rel="alternate" type="text/html" title="Oligarchy collusion" /><published>2018-11-29T00:00:00-05:00</published><updated>2018-11-29T12:53:34-05:00</updated><id>https://bitworking.org/news/2018/11/oligarchy-collusion</id><content type="html" xml:base="https://bitworking.org/news/2018/11/oligarchy-collusion">&lt;p&gt;Don’t you just love it when oligarchies collude?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/collusion.jpg&quot; alt=&quot;Alaska Airlines giving preferential treatment to Facebook and Apple&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Imagine you were a small startup with a new idea for a chat application. How
could you ever compete with this? Is there any wonder there’s a &lt;a href=&quot;https://www.nytimes.com/2017/09/20/business/economy/startup-business.html&quot;&gt;startup
slump&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Don’t you just love it when oligarchies collude?</summary></entry><entry><title type="html">Welcome to your Corporatocracy</title><link href="https://bitworking.org/news/2018/11/welcome-to-your-oligarchy" rel="alternate" type="text/html" title="Welcome to your Corporatocracy" /><published>2018-11-26T00:00:00-05:00</published><updated>2018-11-26T18:41:24-05:00</updated><id>https://bitworking.org/news/2018/11/welcome-to-your-oligarchy</id><content type="html" xml:base="https://bitworking.org/news/2018/11/welcome-to-your-oligarchy">&lt;p&gt;&lt;a href=&quot;https://www.nytimes.com/2018/11/25/opinion/monopolies-in-the-us.html&quot;&gt;The Monopolization of America&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On Monday, the Open Markets Institute — an anti-monopoly think tank — is releasing the
first part of a &lt;a href=&quot;https://concentrationcrisis.openmarketsinstitute.org&quot;&gt;data set&lt;/a&gt; showing the market share that the largest companies
have in each industry.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nothing surprising there, unless you didn’t realize you lived in a
corporatocracy/oligarchy and not a functioning democracy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">The Monopolization of America:</summary></entry><entry><title type="html">Lina Khan on antitrust and Amazon</title><link href="https://bitworking.org/news/2018/11/lina-khan-on-antitrust-and-amazon" rel="alternate" type="text/html" title="Lina Khan on antitrust and Amazon" /><published>2018-11-23T00:00:00-05:00</published><updated>2018-11-23T09:46:28-05:00</updated><id>https://bitworking.org/news/2018/11/lina-khan-on-antitrust-and-amazon</id><content type="html" xml:base="https://bitworking.org/news/2018/11/lina-khan-on-antitrust-and-amazon">&lt;p&gt;This Yale Law Journal Note from &lt;a href=&quot;https://www.linamkhan.com/&quot;&gt;Lina M. Khan&lt;/a&gt; on
&lt;a href=&quot;https://www.yalelawjournal.org/note/amazons-antitrust-paradox&quot;&gt;Amazon’s Antitrust Paradox&lt;/a&gt;
is an amazing read on several levels.&lt;/p&gt;

&lt;p&gt;First, the case it makes against Amazon is impressive, shining a light on
quite a few unsavory things Amazon has done over the years.&lt;/p&gt;

&lt;p&gt;Second, she then expands that case to the rest of the tech giants.&lt;/p&gt;

&lt;p&gt;Third, for a Note in the Yale Law Journal, the entire thing is very readable.
It could have easily devolved into dense legal jargon and didn’t, instead it’s
very approachable and understandable. It is still in a Law Journal, so there’s
over 450 footnotes, so you can always dive deeper.&lt;/p&gt;

&lt;p&gt;One of the things to hightlight is the involvement of Robert Bork in the
current status of antitrust law in the U.S. Yes, that
&lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_Bork&quot;&gt;Robert Bork&lt;/a&gt;, who’s legacy I swear will
end up being the &lt;a href=&quot;https://simple.wikipedia.org/wiki/Thomas_Midgley&quot;&gt;Thomas Midgley&lt;/a&gt; of the law.&lt;/p&gt;

&lt;p&gt;If you liked the Note and want even more background on Bork, Brandeis, and the
history of anittrust then I heartily recommend
&lt;a href=&quot;https://globalreports.columbia.edu/books/the-curse-of-bigness/&quot;&gt;The Curse of Bigness: Antitrust in the new Gilged Age&lt;/a&gt;
by &lt;a href=&quot;http://www.timwu.org/&quot;&gt;Tim Wu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">This Yale Law Journal Note from Lina M. Khan on Amazon’s Antitrust Paradox is an amazing read on several levels.</summary></entry><entry><title type="html">The Federalist Society</title><link href="https://bitworking.org/news/2018/11/the-federalist-society" rel="alternate" type="text/html" title="The Federalist Society" /><published>2018-11-20T00:00:00-05:00</published><updated>2018-11-20T10:08:08-05:00</updated><id>https://bitworking.org/news/2018/11/the-federalist-society</id><content type="html" xml:base="https://bitworking.org/news/2018/11/the-federalist-society">&lt;dl&gt;
  &lt;dt&gt;The Federalist Society&lt;/dt&gt;
  &lt;dd&gt;The coonskip cap and musket branch of constitutional scholars.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">The Federalist Society The coonskip cap and musket branch of constitutional scholars.</summary></entry><entry><title type="html">Slithering silently into political obscurity</title><link href="https://bitworking.org/news/2018/11/slithering-silently-into-political-obscurity" rel="alternate" type="text/html" title="Slithering silently into political obscurity" /><published>2018-11-19T00:00:00-05:00</published><updated>2018-11-19T20:31:55-05:00</updated><id>https://bitworking.org/news/2018/11/slithering-silently-into-political-obscurity</id><content type="html" xml:base="https://bitworking.org/news/2018/11/slithering-silently-into-political-obscurity">&lt;p&gt;You know what my favorite non-sound from the mid-term elections is? Paul Ryan slithering silently into political obscurity.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">You know what my favorite non-sound from the mid-term elections is? Paul Ryan slithering silently into political obscurity.</summary></entry><entry><title type="html">Hold my beer</title><link href="https://bitworking.org/news/2018/11/hold-my-beer" rel="alternate" type="text/html" title="Hold my beer" /><published>2018-11-18T00:00:00-05:00</published><updated>2018-11-18T20:06:32-05:00</updated><id>https://bitworking.org/news/2018/11/hold-my-beer</id><content type="html" xml:base="https://bitworking.org/news/2018/11/hold-my-beer">&lt;p&gt;When I first started working I told everyone I could that I thought that the
single most damaging entity to the American economy was the Harvard Business
School. Little did I know that the University of Chicago Economics Department
was like, “Hold my beer.”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">When I first started working I told everyone I could that I thought that the single most damaging entity to the American economy was the Harvard Business School. Little did I know that the University of Chicago Economics Department was like, “Hold my beer.”</summary></entry><entry><title type="html">Why crowdsourcing will die</title><link href="https://bitworking.org/news/2018/11/why-crowdsourcing-will-die" rel="alternate" type="text/html" title="Why crowdsourcing will die" /><published>2018-11-04T00:00:00-04:00</published><updated>2018-11-04T11:32:35-05:00</updated><id>https://bitworking.org/news/2018/11/why-crowdsourcing-will-die</id><content type="html" xml:base="https://bitworking.org/news/2018/11/why-crowdsourcing-will-die">&lt;p&gt;Crowdsourcing, the idea of slapping together an algortihm that quietly works
alone in the background on a large corpus of data to generate recommendations,
most popular lists, etc. is slowly dying. I pointed this out in my &lt;a href=&quot;https://bitworking.org/news/2018/01/2018-predictions&quot;&gt;2018
Predictions&lt;/a&gt; post, but
didn’t offer a concise explaination as to why that would occur, but as I’ve
watched the year progress, and added more examples to that predicitions post,
I’ve come up with a fairly simple model.&lt;/p&gt;

&lt;h1 id=&quot;the-model-10&quot;&gt;The Model 1.0&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Computers always beat humans.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first thing to understand is that on any constrained problem, a computer
can be built that will eventually out perform any human. You can see this in
constrained domains like playing chess and Go, where human capabilties are now
totally surpassed by computer players. And this is where your recommendation
algorithm author enters the scene and builds a recommendation engine that they
know will be better than anything a human can do. And they may be right. Now
just because a recommendation is done by an algorithm doesn’t necessarily mean
that it’s better, but from our 1.0 model you can see that if you put enough
time into building that algorithm that on that constrained problem space you
will eventuallly be able to beat all humans at the task of generating
recommendations. And that, unfortunately, is where most companies stopped
years ago.&lt;/p&gt;

&lt;p&gt;But our model is incomplete, first because it doesn’t recognize that the
generated output of that algorithm has value, and I’m not even talking about
monetary value, I’m speaking of power to influence people, i.e. the next news
article to read or the next book to buy has a lot of power to bring fringe
ideas into the mainstream. Let’s just think about the resurgence of flat
earthers, or more sinisterly that of white nationalists. Being able to game
the algorithm to get your fringe idea bumped up in the recommendation engine
is a huge win for these groups. Gaming those algorithms is the sole focus
of Russia’s Internet Research Agency.&lt;/p&gt;

&lt;p&gt;But didn’t I just say that algorithms can always be built to beat the humans,
so isn’t this a contradiction? Well, it is of our 1.0 model, but that’s
because we’ve left something out.&lt;/p&gt;

&lt;h1 id=&quot;the-model-20&quot;&gt;The Model 2.0&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Computers always beat humans.&lt;/li&gt;
  &lt;li&gt;Computers plus humans always beat computers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see this in particular in the realm of chess, where a &lt;a href=&quot;https://www.huffingtonpost.com/mike-cassidy/centaur-chess-shows-power_b_6383606.html&quot;&gt;human and
computer pair of players can beat a
computer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now suddenly launching a recommendation algorithm to silently chug along and
produce recommendations looks like a fools errand, as there will always be
groups that have an incentive, either monetary or otherwise, to use humans and
computers together to subvert your algorithm. See for example Russia’s
Internet Research Agency and their computer generated troll army. This &lt;a href=&quot;https://www.gimletmedia.com/reply-all/124&quot;&gt;Reply
All podcast has another great example of gaming
rankings&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So every time you create a recommendation engine, you’ve basically signed up
for a battle that requires you to continuously update your algorithm,
continuously invest engineering resources to keep yourself ahead of the
scammers, spammers, and computer generated troll armies. Suddenly it doesn’t
seem like such a great idea, does it?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Crowdsourcing, the idea of slapping together an algortihm that quietly works alone in the background on a large corpus of data to generate recommendations, most popular lists, etc. is slowly dying. I pointed this out in my 2018 Predictions post, but didn’t offer a concise explaination as to why that would occur, but as I’ve watched the year progress, and added more examples to that predicitions post, I’ve come up with a fairly simple model.</summary></entry><entry><title type="html">kubectl</title><link href="https://bitworking.org/news/2018/10/kubectl" rel="alternate" type="text/html" title="kubectl" /><published>2018-10-31T00:00:00-04:00</published><updated>2018-10-31T09:42:50-04:00</updated><id>https://bitworking.org/news/2018/10/kubectl</id><content type="html" xml:base="https://bitworking.org/news/2018/10/kubectl">&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; command combined with &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; is the Swiss Army Chainsaw of
kubernetes management. Some of my more useful &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  watch &lt;span class=&quot;s1&quot;&gt;'kubectl get pods | column'&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Delete all failed pods.&lt;/span&gt;
  kubectl get pods --field-selector&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;status.phase&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Failed -o json | jq -r &lt;span class=&quot;s1&quot;&gt;'.items[] .metadata.name'&lt;/span&gt;  | xargs kubectl delete pod

  &lt;span class=&quot;c&quot;&gt;# All images running that have the word 'dirty' in their name.&lt;/span&gt;
  kubectl get pods -o json | jq -r &lt;span class=&quot;s1&quot;&gt;'..|.containerStatuses?|select(.!=null)|.[].image'&lt;/span&gt; | sort | uniq | grep dirty
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">The kubectl command combined with jq is the Swiss Army Chainsaw of kubernetes management. Some of my more useful kubectl commands:</summary></entry><entry><title type="html">Firebase Hosting</title><link href="https://bitworking.org/news/2018/10/firebase-hosting" rel="alternate" type="text/html" title="Firebase Hosting" /><published>2018-10-13T00:00:00-04:00</published><updated>2018-10-13T11:21:54-04:00</updated><id>https://bitworking.org/news/2018/10/firebase-hosting</id><content type="html" xml:base="https://bitworking.org/news/2018/10/firebase-hosting">&lt;p&gt;&lt;a href=&quot;https://firebase.google.com/docs/hosting/&quot;&gt;Firebase Hosting&lt;/a&gt; is amazing,
so fast and easy to setup and they even take care of the SSL cert for you.
I work for Google and didn’t even know we had this as a product,
so just posting it here in case anyone else missed it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Firebase Hosting is amazing, so fast and easy to setup and they even take care of the SSL cert for you. I work for Google and didn’t even know we had this as a product, so just posting it here in case anyone else missed it.</summary></entry><entry><title type="html">The experience driven source of the elements-sk set of custom elements.</title><link href="https://bitworking.org/news/2018/07/the-experience-driven-source-of-elements-sk" rel="alternate" type="text/html" title="The experience driven source of the elements-sk set of custom elements." /><published>2018-07-22T00:00:00-04:00</published><updated>2018-07-22T20:38:29-04:00</updated><id>https://bitworking.org/news/2018/07/the-experience-driven-source-of-elements-sk</id><content type="html" xml:base="https://bitworking.org/news/2018/07/the-experience-driven-source-of-elements-sk">&lt;p&gt;Last August, as my team was pondering moving away from
&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt; and creating our own set of
&lt;a href=&quot;https://bitworking.org/news/2018/02/custom-elements-neat&quot;&gt;neat&lt;/a&gt; vanilla js
&lt;a href=&quot;https://developers.google.com/web/fundamentals/web-components/customelements&quot;&gt;custom
elements&lt;/a&gt;,
I decided to take a data driven stab at deciding is this was a viable plan. My
team has been building web applications for over four years using Polymer  and
that corpus of code could be used to guide the decision. The first thing I did
was scan each project and record every Polymer or Iron element used in every
project. If I’m going to replace Polymer at least I should know how many
elements I’m signing up to rewrite. That initial list was surpising in a
couple of ways, the first was how short the list was:&lt;/p&gt;

&lt;style&gt;
table{
  border-collapse: collapse;
  border-spacing: 0;
  border:2px solid gray;
  margin: 1em;
}

th, td {
  padding: 0.2em;
  border:2px solid gray;
}
&lt;/style&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Polymer/Iron elements Used&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-ajax&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-autogrow-textarea&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-collapse&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-flex-layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-icon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-pages&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-resizable-behavior&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-scroll-threshold&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-selector&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-autocomplete&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-button&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-checkbox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dialog&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dialog-scrollable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-drawer-panel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dropdown-menu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-fab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-header-panel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-icon-button&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-input&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-item&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-listbox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-menu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-menu-button&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-radio-button&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-radio-group&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-spinner&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-tabs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toast&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toggle-button&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toolbar&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-tooltip&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;After four years of development I expected the list to be much larger.&lt;/p&gt;

&lt;p&gt;The second surpise was how many of the elements in that list really shouldn’t
be elements at all. For example, some could be replaced with native elements
with some better styling, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;button&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;paper-button&lt;/code&gt;.
Alternatively some could be replaced with CSS or a non-element solution, such
as &lt;code class=&quot;highlighter-rouge&quot;&gt;iron-ajax&lt;/code&gt;, which shouldn’t be an element at all and should be replaced
with the &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch()&lt;/code&gt; function. After doing that analysis the number of elements
actually needed to be re-implemented from Polymer fell to a very small number.
In the table below the ‘Native’ column is for places where we could use native
elements and just have a good default styling for them. The ‘Use Instead’
column is what we could use in place of a custom element. Here you will notice
a large number of elements that can be replaced with CSS. Finally the last
column, ‘Replacement Element’, is the name of the element we made to replace
the Polymer element:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Polymer&lt;/th&gt;
      &lt;th&gt;Native&lt;/th&gt;
      &lt;th&gt;Use Instead&lt;/th&gt;
      &lt;th&gt;Replacement Element&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-ajax&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use fetch()&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-collapse&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;collapse-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-flex-layout&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS Flexbox/Grid&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-icon&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*-icon-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-pages&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;tabs-panel-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-resizable-behavior&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS Flexbox/Grid&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-scroll-threshold&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Shouldn’t be an element&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iron-selector&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;select-sk/multi-select-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-autocomplete&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;No replacement yet.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-button&lt;/td&gt;
      &lt;td&gt;button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-checkbox&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;checkbox-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dialog&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;dialog-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dialog-scrollable&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-drawer-panel&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS Flexbox/Grid&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-dropdown-menu&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;nav-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-fab&lt;/td&gt;
      &lt;td&gt;button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-header-panel&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS Flexbox/Grid&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-icon-button&lt;/td&gt;
      &lt;td&gt;button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;icon-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-input&lt;/td&gt;
      &lt;td&gt;input&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-item&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;nav-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-listbox&lt;/td&gt;
      &lt;td&gt;option/select&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-menu&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;nav-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-menu-button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;nav-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-radio-button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;radio-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-radio-group&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-spinner&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;spinner-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-tabs&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;tabs-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toast&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;toast-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toggle-button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;checkbox-sk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-toolbar&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use CSS Flexbox/Grid&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;paper-tooltip&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Use title attribute&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That set of minimal custom elements has now been launced as
&lt;a href=&quot;https://www.npmjs.com/package/elements-sk&quot;&gt;elements-sk&lt;/a&gt;. While the number of
elements is small, it is driven by four years of development using custom
elements, and just might be a good set of elements for your development too.
If anyone has done a similar analysis I’d love to hear about it, please let me
know in the comments.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Last August, as my team was pondering moving away from Polymer and creating our own set of neat vanilla js custom elements, I decided to take a data driven stab at deciding is this was a viable plan. My team has been building web applications for over four years using Polymer and that corpus of code could be used to guide the decision. The first thing I did was scan each project and record every Polymer or Iron element used in every project. If I’m going to replace Polymer at least I should know how many elements I’m signing up to rewrite. That initial list was surpising in a couple of ways, the first was how short the list was:</summary></entry></feed>