<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://bitworking.org/news/feed/index.atom" rel="self" type="application/atom+xml" /><link href="https://bitworking.org/" rel="alternate" type="text/html" /><updated>2018-02-08T09:08:38-05:00</updated><id>https://bitworking.org/</id><title type="html">BitWorking</title><subtitle>Joe Gregorio - REST, Web, Python, Go, APIs, Dad, Husband, Maker, or any linear combination of such. Googler.
</subtitle><entry><title type="html">StartupGrind - How Transloc Scaled in the Triangle and Exited to Ford</title><link href="https://bitworking.org/news/2018/02/startupgrind-how-transloc-scaled-in-the-triangle-and-exited-to-ford" rel="alternate" type="text/html" title="StartupGrind - How Transloc Scaled in the Triangle and Exited to Ford" /><published>2018-02-08T00:00:00-05:00</published><updated>2018-02-08T09:08:36-05:00</updated><id>https://bitworking.org/news/2018/02/startupgrind-how-transloc-scaled-in-the-triangle-and-exited-to-ford</id><content type="html" xml:base="https://bitworking.org/news/2018/02/startupgrind-how-transloc-scaled-in-the-triangle-and-exited-to-ford">&lt;p&gt;Rats, I’m going to be travelling on the 28th and will miss this StartupGrind event:
&lt;a href=&quot;How Transloc Scaled in the Triangle and Exited to Ford&quot;&gt;https://www.startupgrind.com/events/details/startup-grind-triangle-presents-how-transloc-scaled-in-the-triangle-and-exited-to-ford#/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Rats, I’m going to be travelling on the 28th and will miss this StartupGrind event: https://www.startupgrind.com/events/details/startup-grind-triangle-presents-how-transloc-scaled-in-the-triangle-and-exited-to-ford#/.</summary></entry><entry><title type="html">Paul Kinlan - A simple clientside templating language</title><link href="https://bitworking.org/news/2018/01/paul-kinlan-a-simple-clientside-templating-language" rel="alternate" type="text/html" title="Paul Kinlan - A simple clientside templating language" /><published>2018-01-31T00:00:00-05:00</published><updated>2018-01-31T21:29:26-05:00</updated><id>https://bitworking.org/news/2018/01/paul-kinlan-a-simple-clientside-templating-language</id><content type="html" xml:base="https://bitworking.org/news/2018/01/paul-kinlan-a-simple-clientside-templating-language">&lt;p&gt;Paul Kinlan’s &lt;a href=&quot;https://paul.kinlan.me/a-simple-dom-template-language/&quot;&gt;A simple clientside templating langauge&lt;/a&gt;
has a client side templating library using &lt;code class=&quot;highlighter-rouge&quot;&gt;data-&lt;/code&gt; attributes, and
the implementation comes in at around 25 lines of code. Definitely a great
example to demystify templating and demonstrate that you don’t always need a
framework or large library to get the functionality you want.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jcgregorio/stamp&quot;&gt;Stamp&lt;/a&gt; is a similar library I put
together a few years ago with the same goals in mind, but weights in at 250
lines of code.&lt;/p&gt;

&lt;p&gt;I should really update &lt;a href=&quot;https://github.com/jcgregorio/vanillajs&quot;&gt;VanillaJS&lt;/a&gt;
with a couple more ports, one each for Stamp and Paul’s library.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Paul Kinlan’s A simple clientside templating langauge has a client side templating library using data- attributes, and the implementation comes in at around 25 lines of code. Definitely a great example to demystify templating and demonstrate that you don’t always need a framework or large library to get the functionality you want.</summary></entry><entry><title type="html">Ford acquires Transloc</title><link href="https://bitworking.org/news/2018/01/ford-acquires-transloc" rel="alternate" type="text/html" title="Ford acquires Transloc" /><published>2018-01-25T00:00:00-05:00</published><updated>2018-01-25T21:29:38-05:00</updated><id>https://bitworking.org/news/2018/01/ford-acquires-transloc</id><content type="html" xml:base="https://bitworking.org/news/2018/01/ford-acquires-transloc">&lt;p&gt;Via TechCrunch: &lt;a href=&quot;https://techcrunch.com/2018/01/25/ford-acquires-autonomic-and-transloc-as-it-evolves-its-mobility-business/&quot;&gt;Ford acquires Autonomic and TransLoc as it evolves its mobility business&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s great to see another great North Carolina company get recognized.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Via TechCrunch: Ford acquires Autonomic and TransLoc as it evolves its mobility business</summary></entry><entry><title type="html">Bridgy, webmentions, and publishing.</title><link href="https://bitworking.org/news/2018/01/bridgy-webmentions-and-publishing" rel="alternate" type="text/html" title="Bridgy, webmentions, and publishing." /><published>2018-01-21T00:00:00-05:00</published><updated>2018-01-21T01:41:16-05:00</updated><id>https://bitworking.org/news/2018/01/bridgy-webmentions-and-publishing</id><content type="html" xml:base="https://bitworking.org/news/2018/01/bridgy-webmentions-and-publishing">&lt;p&gt;&lt;a href=&quot;https://brid.gy/about#webmentions&quot;&gt;Brid.gy&lt;/a&gt; has a cool feature for
automatically posting blog posts to Twitter, which is interesting because it
uses Webmentions to kick off the whole process. I.e. just including the
link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://brid.gy/publish/twitter&quot;&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The webmention sent to brig.gy triggers it to look back at the post, parse it
and look for microformats indicating what content to publish, and then posts
it to Twitter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018/bridgy.png&quot; alt=&quot;Using webmentions to trigger brid.gy to publish to Twitter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note that this also works for Facebook and Flickr, and you obviously need to
authorize brid.gy to post to Twitter for you.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Brid.gy has a cool feature for automatically posting blog posts to Twitter, which is interesting because it uses Webmentions to kick off the whole process. I.e. just including the link:</summary></entry><entry><title type="html">Blogging drawings</title><link href="https://bitworking.org/news/2018/01/blogging-drawings" rel="alternate" type="text/html" title="Blogging drawings" /><published>2018-01-21T00:00:00-05:00</published><updated>2018-01-21T21:43:15-05:00</updated><id>https://bitworking.org/news/2018/01/blogging-drawings</id><content type="html" xml:base="https://bitworking.org/news/2018/01/blogging-drawings">&lt;p&gt;One of the goals with my new blogging system has been a flow for getting hand
drawn images onto the blog. I will admit this is purely driven by jealousy of
the awesome drawings on &lt;a href=&quot;https://blog.acolyer.org/2016/04/21/the-amazing-power-of-word-vectors/&quot;&gt;the morning
paper&lt;/a&gt;.
I didn’t know if I’d ever find a setup I would like until I got to borrow a
&lt;a href=&quot;https://store.google.com/us/product/google_pixelbook&quot;&gt;Google Pixelbook&lt;/a&gt;,
which is just an amazing machine and deserves a writeup on its own, but has
several key features, such as the ability to run Android apps and the ability
to fold over and turn into a tablet, along with one of the best digital pens
I’ve ever used. In the end my flow looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018/blogging_pictures.png&quot; alt=&quot;Squid to Google Drive to Jekyll to GCE&quot; style=&quot;max-width:70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.steadfastinnovation.android.projectpapyrus&quot;&gt;Squid&lt;/a&gt;
is an Android app, one of the dozens I looked at, and the one that worked
the best for me, which means it is simple and has nice defaults.&lt;/p&gt;

&lt;p&gt;The “NUC” is my desktop machine which is where my blogging work is mostly
done, but that’s a machine I almost never physically touch, I’m almost always
accessing it over SSH, which is why this flow is probably a little more
complicated than you might have guessed.&lt;/p&gt;

&lt;p&gt;The “GCE” box in that picture is the Google Compute Enging instance that runs
&lt;a href=&quot;https://github.com/jcgregorio/userve&quot;&gt;userve&lt;/a&gt; and hosts this blog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">One of the goals with my new blogging system has been a flow for getting hand drawn images onto the blog. I will admit this is purely driven by jealousy of the awesome drawings on the morning paper. I didn’t know if I’d ever find a setup I would like until I got to borrow a Google Pixelbook, which is just an amazing machine and deserves a writeup on its own, but has several key features, such as the ability to run Android apps and the ability to fold over and turn into a tablet, along with one of the best digital pens I’ve ever used. In the end my flow looks like this:</summary></entry><entry><title type="html">Having fun with silo metadata</title><link href="https://bitworking.org/news/2018/01/having-fun-silo-metadata" rel="alternate" type="text/html" title="Having fun with silo metadata" /><published>2018-01-20T00:00:00-05:00</published><updated>2018-01-20T10:41:15-05:00</updated><id>https://bitworking.org/news/2018/01/having-fun-silo-metadata</id><content type="html" xml:base="https://bitworking.org/news/2018/01/having-fun-silo-metadata">&lt;p&gt;I just recently finished adding support for
&lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&quot;&gt;Twitter metadata&lt;/a&gt;
to the blog, mostly motivaged by &lt;a href=&quot;https://brid.gy/&quot;&gt;brid.gy&lt;/a&gt;’s ability to use
Webmentions to automatically post my blog entries to Twitter. As I worked on
the Twitter metadata I wondered if other silos had their own metadata they
supported. Indeed they do, and Kevin Marks brilliantly demonstrates how
ridiculous the situation is by creating a
&lt;a href=&quot;http://www.kevinmarks.com/partialsilos.html&quot;&gt;blog post that appears different in every silo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">I just recently finished adding support for Twitter metadata to the blog, mostly motivaged by brid.gy’s ability to use Webmentions to automatically post my blog entries to Twitter. As I worked on the Twitter metadata I wondered if other silos had their own metadata they supported. Indeed they do, and Kevin Marks brilliantly demonstrates how ridiculous the situation is by creating a blog post that appears different in every silo.</summary></entry><entry><title type="html">Space Gas Station</title><link href="https://bitworking.org/news/2018/01/space-gas-station" rel="alternate" type="text/html" title="Space Gas Station" /><published>2018-01-19T00:00:00-05:00</published><updated>2018-01-19T22:37:57-05:00</updated><id>https://bitworking.org/news/2018/01/space-gas-station</id><content type="html" xml:base="https://bitworking.org/news/2018/01/space-gas-station">&lt;p&gt;This SingularityHub post brings a good perspective
on the economics of asteroid mining:
&lt;a href=&quot;https://singularityhub.com/2018/01/19/want-faster-data-and-a-cleaner-planet-start-mining-asteroids/&quot;&gt;Want Faster Data and a Cleaner Planet? Start Mining Asteroids&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Besides, the idea of our gateway to becoming a space faring civilization
being bootstrapped from a space gas station is so much more
&lt;a href=&quot;https://www.jamessacorey.com/books/&quot;&gt;Expanse&lt;/a&gt; level scifi that I can’t help but like it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brid.gy/publish/twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">This SingularityHub post brings a good perspective on the economics of asteroid mining: Want Faster Data and a Cleaner Planet? Start Mining Asteroids</summary></entry><entry><title type="html">Webmention parsing and formatting is now complete</title><link href="https://bitworking.org/news/2018/01/webmention-parsing-and-formatting-is-now-complete" rel="alternate" type="text/html" title="Webmention parsing and formatting is now complete" /><published>2018-01-18T00:00:00-05:00</published><updated>2018-01-18T22:50:34-05:00</updated><id>https://bitworking.org/news/2018/01/webmention-parsing-and-formatting-is-now-complete</id><content type="html" xml:base="https://bitworking.org/news/2018/01/webmention-parsing-and-formatting-is-now-complete">&lt;p&gt;As &lt;a href=&quot;http://stream.boffosocko.com/2018/i-suspect-that-next-with-a-tad-bit-of-parsing&quot;&gt;Chris suggested&lt;/a&gt;, I have gone beyond
&lt;a href=&quot;https://bitworking.org/news/2018/01/going-beyond-minimal-webmentions&quot;&gt;my minimal webmentions&lt;/a&gt;, and thanks to the heavy lifting of
&lt;a href=&quot;https://willnorris.com/go/microformats&quot;&gt;Will Norris&lt;/a&gt;, I got to avoid handwriting a microformats parser in the process.&lt;/p&gt;

&lt;p&gt;This is what they should look like in action:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018/webmentions.png&quot; alt=&quot;Screenshot of webmentions in action.&quot; /&gt;&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">As Chris suggested, I have gone beyond my minimal webmentions, and thanks to the heavy lifting of Will Norris, I got to avoid handwriting a microformats parser in the process.</summary></entry><entry><title type="html">Snow - 2018</title><link href="https://bitworking.org/news/2018/01/snow-2018" rel="alternate" type="text/html" title="Snow - 2018" /><published>2018-01-18T00:00:00-05:00</published><updated>2018-01-18T10:13:53-05:00</updated><id>https://bitworking.org/news/2018/01/snow---2018</id><content type="html" xml:base="https://bitworking.org/news/2018/01/snow-2018">&lt;p&gt;&lt;img src=&quot;/images/2018/snow.jpeg&quot; alt=&quot;Fallen snow at night&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There’s a road under that, somewhere.&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html"></summary></entry><entry><title type="html">Google Cloud Free Tier</title><link href="https://bitworking.org/news/2018/01/google-cloud-free-tier" rel="alternate" type="text/html" title="Google Cloud Free Tier" /><published>2018-01-18T00:00:00-05:00</published><updated>2018-01-18T09:19:09-05:00</updated><id>https://bitworking.org/news/2018/01/google-cloud-free-tier</id><content type="html" xml:base="https://bitworking.org/news/2018/01/google-cloud-free-tier">&lt;p&gt;Looks like Google Cloud Platform now has a &lt;a href=&quot;https://cloud.google.com/free/&quot;&gt;Free Tier&lt;/a&gt;.
I know Google App Engine has always had a free tier, it’s nice to see Cloud
Platform offer something similar.&lt;/p&gt;

&lt;p&gt;That explains why my monthly bill for hosting my blog went from $9/month to
around 0.75$/month. The only thing I exceed the free tier on is egress
bandwidth.&lt;/p&gt;</content><author><name>Joe Gregorio</name></author><summary type="html">Looks like Google Cloud Platform now has a Free Tier. I know Google App Engine has always had a free tier, it’s nice to see Cloud Platform offer something similar.</summary></entry></feed>