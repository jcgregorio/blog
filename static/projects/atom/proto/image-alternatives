<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta http-equiv="Content-Language" content="en-us" />
        <link rel="start" title="Home page" href="http://bitworking.org/news/" />
        <style type="text/css" media="screen">@import "/css/base.css";</style>
        <style type="text/css">
            body { 
                margin: 3em; 
                width:  40em;
            }
        </style>
        <title>AtomAPI Media Handling Alternatives</title>
    </head>
    <body>
        <p>There are several alternatives for how to handle 
            images and other non-textual content via the AtomAPI. This outlines two main
            alternatives and raises implementation questions for both of them.
        </p>
        <h2>SERVICE.UPLOAD</h2>
            <p>Create a separate URI, labelled by rel="service.upload", for uploading files to.
                    This is the approach currently taken in the <a href="http://sixapart.com/developers/atom/typepad/">TypePad implementation</a> of
                    the AtomAPI.</p>
                <h3>Example:</h3>
                <pre class="example"><code>POST /t/atom/weblog/upload HTTP/1.1
Host: www.typepad.com
X-WSSE: my credentials
Content-type: image/jpeg
Content-length: 12675

<em>&lt;binary jpeg data goes here.></em>
                </code></pre>
                <p>The response is a 201 with a Location: header with the URI 
                    of the newly created resource.</p>

                <pre class="example"><code>HTTP/1.1 201 Created
Location: http://bitworking.typepad.com/images/name.jpg
                </code></pre>
                <p>Open questions for this approach:</p>
                <ol>
                    <li>How is the name of the image determined?</li>
                    <li>How is the image replaced?</li>
                    <li>How is the image deleted?</li>
                    <li>How does the client know which content types a server accepts?</li>
                </ol>

                <h2>Multiple Content Elements</h2>
                <p>The current draft of the Atom format
                    <a href="http://www.mnot.net/drafts/draft-nottingham-atom-format-02.html#rfc.section.4.13.10">allows
                        for more than one content element</a> per entry. This could be used
                    to send both the text of an entry and associated media all in one request.
                </p>
                <h3>Example</h3>
                <pre class="example"><code>POST /t/atom/weblog/blog_id=1 HTTP/1.1
Host: www.typepad.com
X-WSSE: my credentials
Content-type: application/atom+xml
Content-length: 45091

&lt;?xml version="1.0" encoding="utf-8"?>
&lt;entry xmlns="http://purl.org/atom/ns#" 
          xmlns:dc="http://purl.org/dc/elements/1.1/">
    &lt;title>Trip to the Lake&lt;/title>
    &lt;dc:subject>Vacation&lt;/dc:subject>
<span style="color:red">    &lt;content type="application/xhtml+xml" mode="xml">
       &lt;div xmlns="http://www.w3.org/1999/xhtml">
         &lt;img src="http://ex.typepad.com/ph/lake.jpg" /> 
            Here is a picture of me at the lake.
        &lt;/div>
    &lt;/content></span>
<span style="color:blue">    &lt;content type="image/jpeg" mode="base64">
         wAU6eltbtpCLHKqIyR6iXEQmeMlRcx4B+VuMHgDrXB2f7L/
         AMNfhVbnWNN0TTpdVFvPFFqC2MVkIY2DPkJBMRKxZkwWJGR
         nrXlV1hHQrPE05zxFF+7y25V566pt+XfV6s+grYbN6taEsJ
         GlTwU4Xm5OTm00vVWtfu9rKzPwm+PHwu1j4YxRxanrWkK93
         .
         .
         .
         fa3qmkCa5SK\neey0m7WBlgglGLm48q5gcgYDMhVdxBFfKW
     &lt;/content></span>
&lt;/entry>
                </code></pre>           
                <p>Open questions for this approach:</p>
                <ol>
                    <li>What name is given to the image submitted as base64?</li>
                    <li>How can that name be associated with the src attribute 
                        of the img element in the submitted XHTML content?
                    </li>
                    <li>How does a client know which content types a 
                        server accepts?
                    </li>
                    <li>How is the image replaced?</li>
                    <li>How is the image deleted?</li>
                </ol>
            </body>
</html>
